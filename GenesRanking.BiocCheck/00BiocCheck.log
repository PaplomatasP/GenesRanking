* Checking for deprecated package usage... OK
* Checking for remote package usage... OK
* Checking for 'LazyData: true' usage... OK
* Checking version number... OK
* Checking version number validity... OK
* Checking R version dependency... OK
* Checking package size... OK
* Checking individual file sizes... OK
* Checking biocViews... OK
* Checking that biocViews are present... OK
* Checking package type based on biocViews... OK
* Checking for non-trivial biocViews... OK
* Checking that biocViews come from the same category... OK
* Checking biocViews validity... OK
* Checking for recommended biocViews... OK
* Checking build system compatibility... OK
* Checking for blank lines in DESCRIPTION... OK
* Checking if DESCRIPTION is well formatted... OK
* Checking for proper Description: field... OK
* Checking for whitespace in DESCRIPTION field names... OK
* Checking that Package field matches directory/tarball name... OK
* Checking for Version field... OK
* Checking for valid maintainer... OK
* Checking License: for restrictive use... OK
* Checking for pinned package versions... OK
* Checking DESCRIPTION/NAMESPACE consistency... OK
* Checking .Rbuildignore... OK
* Checking for stray BiocCheck output folders... OK
* Checking vignette directory... OK
* Checking package installation calls in R code... OK
* Checking for library/require of GenesRanking... OK
* Checking coding practice...
* NOTE:  Avoid using '=' for assignment and use '<-' instead
Found in files:
R/Ontology_Analysis.R (line 52, column 13)
R/Ontology_Analysis.R (line 57, column 13)
* Checking parsed R code in R directory, examples, vignettes... OK
* Checking function lengths...
* NOTE: The recommended function length is 50 lines or less. There are 10 functions greater than 50 lines.
The longest 5 functions are:
Boosting_Based_ML() (R/XGBoost_Based_ML.R): 90 lines
PvalueCalc() (R/Support_StatisticalMethods.R): 76 lines
Tree_Based_ML() (R/Tree_Based_ML.R): 52 lines
Statistical_Filter() (R/Statistical_Filter.R): 50 lines
LD_Based_ML() (R/LD_Based_ML.R): 47 lines
* Checking man page documentation... OK
* Checking package NEWS...
* NOTE: Consider adding a NEWS file, so your package news will be included in Bioconductor release announcements.
* Checking unit tests... OK
* Checking skip_on_bioc() in tests... OK
* Checking formatting of DESCRIPTION, NAMESPACE, man pages, R source, and vignette source...
* NOTE: Consider shorter lines; 39 lines (3%) are > 80 characters long.
First few lines:
R/ExampleDataset.R#L  6 #' @format A data.frame with rows repres...
R/LD_Based_ML.R#L  1 #' Linear and Distance-Based Machine Lea...
R/LD_Based_ML.R#L  5 #' It then uses machine learning analysi...
R/LD_Based_ML.R#L 12 #'   method to be used. The valid option...
R/LD_Based_ML.R#L 17 #' @return A list with three elements: \...
R/LD_Based_ML.R#L 20 #'   representing genes and columns repr...
R/Ontology_Analysis.R#L  5 #' used (e.g., "KEGG", "GO", "MKEGG"), a...
R/PreprocessFilter.R#L 14 #'   used. The valid options are "High_V...
R/PreprocessFilter.R#L 15 #' @param n_features An integer value th...
R/PreprocessFilter.R#L 76     norm_factor <- edgeR::calcNormFactor...
R/PreprocessFilter.R#L 92     normalized_data <- scater::calculate...
R/Statistical_Filter.R#L  4 #' This function performs a statistical ...
R/Statistical_Filter.R#L 14 #' @param n_genes_to_keep An integer ind...
R/Statistical_Filter.R#L 58                                list(rown...
R/Statistical_Filter.R#L 76                                list(rown...
R/Statistical_Filter.R#L 80     PvalueTreshold <-PvalueTreshold[orde...
R/Support_StatisticalMethods.R#L 66     Seurat.input <- Seurat::CreateSeurat...
R/Support_StatisticalMethods.R#L 85                          design = design...
R/Support_StatisticalMethods.R#L 95     object_DESeq2 <- DESeq2::DESeqDataSe...
R/Support_StatisticalMethods.R#L 96                                         ...
R/Tree_Based_ML.R#L  5 #' It then uses machine learning analysi...
R/XGBoost_Based_ML.R#L  1 #' Boosting_Based_ML Based Machine Learn...
R/XGBoost_Based_ML.R#L  5 #' It then uses machine learning analysi...
R/XGBoost_Based_ML.R#L  9 #' @param MLmethod A character string sp...
R/XGBoost_Based_ML.R#L 10 #' @param n_genes_to_keep An integer spe...
R/XGBoost_Based_ML.R#L 14 #'   \item{FilteredData}{A data frame or...
R/XGBoost_Based_ML.R#L 15 #'   \item{Important_Features}{A charact...
R/XGBoost_Based_ML.R#L 91         gbm::relative.influence(model$fi...
man/Boosting_Based_ML.Rd#L  5 \title{Boosting_Based_ML Based Machine L...
man/Boosting_Based_ML.Rd#L 14 \item{MLmethod}{A character string speci...
man/Boosting_Based_ML.Rd#L 16 \item{n_genes_to_keep}{An integer specif...
man/Boosting_Based_ML.Rd#L 21 \item{FilteredData}{A data frame or matr...
man/Boosting_Based_ML.Rd#L 22 \item{Important_Features}{A character ve...
man/LD_Based_ML.Rd#L  5 \title{Linear and Distance-Based Machine...
man/Tree_Based_ML.Rd#L  5 \title{Applies tree-based machine learni...
vignettes/GenesRanking_vignette.Rmd#L 95                                         ...
vignettes/GenesRanking_vignette.Rmd#L109 Let's examine these lists of dominant ge...
vignettes/GenesRanking_vignette.Rmd#L112 # Each of the methods has identified 100...
vignettes/GenesRanking_vignette.Rmd#L128 Now, we can perform an enrichment analys...
* NOTE: Consider multiples of 4 spaces for line indents; 237 lines (18%) are not.
First few lines:
R/LD_Based_ML.R#L 38   importanceLimit <- -1...
R/LD_Based_ML.R#L 39   data <- as.data.frame(t(data))...
R/LD_Based_ML.R#L 40   MLlist <- c(...
R/LD_Based_ML.R#L 45   if (MLmethod %in% MLlist) {...
R/LD_Based_ML.R#L 47   } else {...
R/LD_Based_ML.R#L 49   }...
R/LD_Based_ML.R#L 50   data$Labels <- as.factor(Labels)...
R/LD_Based_ML.R#L 51   partitionData <- caret::createDataPart...
R/LD_Based_ML.R#L 52       data$Labels, p = 0.75, list = FALS...
R/LD_Based_ML.R#L 53   trainData <- data[partitionData,]...
R/LD_Based_ML.R#L 54   testData <- data[-partitionData,]...
R/LD_Based_ML.R#L 55   trainControl <- caret::trainControl(...
R/LD_Based_ML.R#L 59   message("Model training, please wait!!...
R/LD_Based_ML.R#L 60   model <- caret::train(...
R/LD_Based_ML.R#L 67   message("Training completed. Searching...
R/LD_Based_ML.R#L 68   df_imps <- varImp(model)...
R/LD_Based_ML.R#L 69   df_imps1 <- df_imps[["importance"]][1]...
R/LD_Based_ML.R#L 70   df_imps1 <- df_imps1[order(-df_imps1[,...
R/LD_Based_ML.R#L 71   df_imps1 <- subset(df_imps1, df_imps1[...
R/LD_Based_ML.R#L 72   df_imps2 <- df_imps1[seq_len(n_genes_t...
R/LD_Based_ML.R#L 73   Genes <- rownames(df_imps2)...
R/LD_Based_ML.R#L 74   Genes <- gsub("`", "", Genes)...
R/LD_Based_ML.R#L 75   obj <- as.data.frame(t(data))...
R/LD_Based_ML.R#L 76   newdata <- obj[rownames(obj) %in% Gene...
R/LD_Based_ML.R#L 77   message("The Analysis is completed.")...
R/LD_Based_ML.R#L 78   return(...
R/LD_Based_ML.R#L 80       FilterData = newdata,...
R/LD_Based_ML.R#L 81       Important_Features = Genes,...
R/LD_Based_ML.R#L 82       ML_Analysis = df_imps1))...
R/Ontology_Analysis.R#L 28                               ontology_t...
R/Ontology_Analysis.R#L 29                               organism =...
R/Ontology_Analysis.R#L 30   if (organism == "human") {...
R/Ontology_Analysis.R#L 32   } else if (organism == "mouse") {...
R/Ontology_Analysis.R#L 34   } else {...
R/Ontology_Analysis.R#L 36   }...
R/Ontology_Analysis.R#L 38   # Convert gene symbols to Entrez IDs...
R/Ontology_Analysis.R#L 39   entrez_ids <- AnnotationDbi::mapIds(...
R/Ontology_Analysis.R#L 45   )...
R/Ontology_Analysis.R#L 47   # Remove NAs...
R/Ontology_Analysis.R#L 48   entrez_ids <- entrez_ids[!is.na(entrez...
R/Ontology_Analysis.R#L 50   # Perform enrichment analysis based on...
R/Ontology_Analysis.R#L 51   if (ontology_type == "KEGG") {...
R/Ontology_Analysis.R#L 53       gene = entrez_ids,...
R/Ontology_Analysis.R#L 54       organism = ifelse(organism == "hum...
R/Ontology_Analysis.R#L 55       pvalueCutoff = 0.05)...
R/Ontology_Analysis.R#L 56   } else if (ontology_type == "GO") {...
R/Ontology_Analysis.R#L 58       gene = entrez_ids,...
R/Ontology_Analysis.R#L 59       OrgDb = org_db,...
R/Ontology_Analysis.R#L 60       ont = "ALL",...
R/Ontology_Analysis.R#L 61       pvalueCutoff = 0.05)...
R/Ontology_Analysis.R#L 62   } else if (ontology_type == "MKEGG") {...
R/Ontology_Analysis.R#L 64       gene <- entrez_ids,...
R/Ontology_Analysis.R#L 65       organism <- ifelse(organism == "hu...
R/Ontology_Analysis.R#L 66   } else {...
R/Ontology_Analysis.R#L 68   }...
R/Ontology_Analysis.R#L 69   results <- results@result...
R/Ontology_Analysis.R#L 70   return(results)...
R/PreprocessFilter.R#L 33   if (filter_method == "High_Variable_Ge...
R/PreprocessFilter.R#L 36       seurat_obj,...
R/PreprocessFilter.R#L 37       selection.method = "vst",...
R/PreprocessFilter.R#L 38       nfeatures = n_features...
R/PreprocessFilter.R#L 42   } else if (filter_method == "Remove_Lo...
R/PreprocessFilter.R#L 44   }...
R/PreprocessFilter.R#L 45   return(filtered_data)...
R/PreprocessFilter.R#L 75   if (normal_method == "TMM") {...
R/PreprocessFilter.R#L 78   } else if (normal_method == "RLE") {...
R/PreprocessFilter.R#L 81       norm_factor <- stats::median(...
R/PreprocessFilter.R#L 86   } else if (normal_method == "CPM") {...
R/PreprocessFilter.R#L 89   } else if (normal_method == "TPM") {...
R/PreprocessFilter.R#L 91       assays = list(counts = ExpressionD...
R/PreprocessFilter.R#L 93   } else if (normal_method == "LogNormal...
R/PreprocessFilter.R#L 96       Seurat::LogNormalize(ExpressionDat...
R/PreprocessFilter.R#L 97   }...
R/PreprocessFilter.R#L 98   return(normalized_data)...
R/Statistical_Filter.R#L 41   options(scipen = 999)...
R/Statistical_Filter.R#L 42   threshold <- 1...
R/Statistical_Filter.R#L 43   data1 <- data_fitting(data, Labels)...
R/Statistical_Filter.R#L 44   PvalueData <- PvalueCalc(data <- data1...
R/Statistical_Filter.R#L 45                           Labels <- Labe...
R/Statistical_Filter.R#L 46   PvalueData  <- as.data.frame(PvalueDat...
R/Statistical_Filter.R#L 47   if (Pvalue_md == "Waldtest" |...
R/Statistical_Filter.R#L 48       Pvalue_md == "BPglm" | Pvalue_md =...
R/Statistical_Filter.R#L 55       if (PvalueData[, 3][i] <= threshol...
R/Statistical_Filter.R#L 58                                list(rown...
R/Statistical_Filter.R#L 59       }...
R/Statistical_Filter.R#L 63       PvalueTreshold[order(PvalueTreshol...
R/Statistical_Filter.R#L 66   }...
R/Statistical_Filter.R#L 67   if (Pvalue_md == "LRT") {...
R/Statistical_Filter.R#L 73       if (PvalueData[, 3][i] <= threshol...
R/Statistical_Filter.R#L 76                                list(rown...
R/Statistical_Filter.R#L 77       }...
R/Statistical_Filter.R#L 83   }...
R/Statistical_Filter.R#L 84   return(...
R/Statistical_Filter.R#L 86       FilterData = neudata,...
R/Statistical_Filter.R#L 87       Important_Features = Genes,...
R/Statistical_Filter.R#L 88       Statistical_Analysis = PvalueData)...
R/Statistical_Filter.R#L 89   )}...
R/Support_StatisticalMethods.R#L 14   if (missing(normal.Method)) {...
R/Support_StatisticalMethods.R#L 16   } else {...
R/Support_StatisticalMethods.R#L 18   }...
R/Support_StatisticalMethods.R#L 19   SingleCell <-...
R/Support_StatisticalMethods.R#L 21       assays = list(counts = data, normc...
R/Support_StatisticalMethods.R#L 22   gene_df <- data.frame(Gene = rownames(...
R/Support_StatisticalMethods.R#L 23   cell_df <- data.frame(label = group, c...
R/Support_StatisticalMethods.R#L 24   rownames(gene_df) <- gene_df$Gene...
R/Support_StatisticalMethods.R#L 25   rownames(cell_df) <- cell_df$cell...
R/Support_StatisticalMethods.R#L 26   SingleCell <-...
R/Support_StatisticalMethods.R#L 28       assays = list(counts = data, normc...
R/Support_StatisticalMethods.R#L 29       colData = cell_df,...
R/Support_StatisticalMethods.R#L 30       rowData = gene_df...
R/Support_StatisticalMethods.R#L 59                        dmethod = "bimod"...
R/Support_StatisticalMethods.R#L 60                        method_MAST = "ba...
R/Support_StatisticalMethods.R#L 61   if (Pvaluemethod == "WilcoxonTest") {...
R/Support_StatisticalMethods.R#L 69                                ident.1 =...
R/Support_StatisticalMethods.R#L 70                                ident.2 =...
R/Support_StatisticalMethods.R#L 71                                group.by ...
R/Support_StatisticalMethods.R#L 72                                logfc.thr...
R/Support_StatisticalMethods.R#L 73                                test.use ...
R/Support_StatisticalMethods.R#L 74                                only.pos ...
R/Support_StatisticalMethods.R#L 75                                verbose =...
R/Support_StatisticalMethods.R#L 77                            pvalue = res$...
R/Support_StatisticalMethods.R#L 78                            FDR = res$p_v...
R/Support_StatisticalMethods.R#L 80   } else if (Pvaluemethod == "BPglm") {...
R/Support_StatisticalMethods.R#L 85                          design = design...
R/Support_StatisticalMethods.R#L 91   } else if (Pvaluemethod == "LRT") {...
R/Support_StatisticalMethods.R#L 99       object_DESeq2 <- DESeq2::DESeq(obj...
R/Support_StatisticalMethods.R#L100                                      par...
R/Support_StatisticalMethods.R#L101                                      fit...
R/Support_StatisticalMethods.R#L104       object_DESeq2 <- DESeq2::DESeq(obj...
R/Support_StatisticalMethods.R#L105                                      par...
R/Support_StatisticalMethods.R#L106                                      fit...
R/Support_StatisticalMethods.R#L110                           pvalue = res_c...
R/Support_StatisticalMethods.R#L111                           FDR = res_cpm$...
R/Support_StatisticalMethods.R#L113   } else if (Pvaluemethod == "Waldtest")...
R/Support_StatisticalMethods.R#L116       as.matrix(SummarizedExperiment::as...
R/Support_StatisticalMethods.R#L120       exprsArray <- log2(object_MAST + 1...
R/Support_StatisticalMethods.R#L121       cData <- data.frame(wellKey <- nam...
R/Support_StatisticalMethods.R#L122                          grp = grp))...
R/Support_StatisticalMethods.R#L124                          parallel <- MAS...
R/Support_StatisticalMethods.R#L128       list(gene_names <- names(mast[, "h...
R/Support_StatisticalMethods.R#L129            pvalue <- mast[, "hurdle", "P...
R/Support_StatisticalMethods.R#L130            FDR <- FDR)...
R/Support_StatisticalMethods.R#L132   }...
R/Tree_Based_ML.R#L 39                           Labels,...
R/Tree_Based_ML.R#L 40                           MLmethod,...
R/Tree_Based_ML.R#L 41                           n_genes_to_kee...
R/Tree_Based_ML.R#L 42   importanceLimit <- -1...
R/Tree_Based_ML.R#L 43   data <- as.data.frame(t(data))...
R/Tree_Based_ML.R#L 44   MLlist <- c(...
R/Tree_Based_ML.R#L 46   )...
R/Tree_Based_ML.R#L 47   if (MLmethod %in% MLlist) {...
R/Tree_Based_ML.R#L 49   } else {...
R/Tree_Based_ML.R#L 52   }...
R/Tree_Based_ML.R#L 53   if (MLmethod == "rpart" | MLmethod == ...
R/Tree_Based_ML.R#L 55   }...
R/Tree_Based_ML.R#L 56   data$Labels <- as.factor(Labels)...
R/Tree_Based_ML.R#L 57   partitionData <- caret::createDataPart...
R/Tree_Based_ML.R#L 59   trainData <- data[partitionData,]...
R/Tree_Based_ML.R#L 60   testData  <- data[-partitionData,]...
R/Tree_Based_ML.R#L 61   trainControl <- caret::trainControl(me...
R/Tree_Based_ML.R#L 62                                       nu...
R/Tree_Based_ML.R#L 63                                       p ...
R/Tree_Based_ML.R#L 64   message("Model training, please wait!!...
R/Tree_Based_ML.R#L 65   model <- caret::train(...
R/Tree_Based_ML.R#L 72   message("Training completed. Searching...
R/Tree_Based_ML.R#L 73   df_imps <- varImp(model)...
R/Tree_Based_ML.R#L 74   df_imps1 <- df_imps[["importance"]][1]...
R/Tree_Based_ML.R#L 75   df_imps1 <- df_imps1[order(-df_imps1[,...
R/Tree_Based_ML.R#L 76   df_imps1 <- subset(df_imps1, df_imps1[...
R/Tree_Based_ML.R#L 77   df_imps2 <- df_imps1[seq_len(n_genes_t...
R/Tree_Based_ML.R#L 78   Genes <- rownames(df_imps2)...
R/Tree_Based_ML.R#L 79   Genes <- gsub("`", "", Genes)...
R/Tree_Based_ML.R#L 80   obj <- as.data.frame(t(data))...
R/Tree_Based_ML.R#L 81   newdata <- obj[rownames(obj) %in% Gene...
R/Tree_Based_ML.R#L 82   message("The Analysis is completed.")...
R/Tree_Based_ML.R#L 83   return(...
R/Tree_Based_ML.R#L 85       FilterData = newdata,...
R/Tree_Based_ML.R#L 86       Important_Features = Genes,...
R/Tree_Based_ML.R#L 87       ML_Analysis = df_imps1...
R/XGBoost_Based_ML.R#L 25   function(data, Labels, MLmethod, n_gen...
R/XGBoost_Based_ML.R#L 29       message("ML method input is not va...
R/XGBoost_Based_ML.R#L 30       return(-1)...
R/XGBoost_Based_ML.R#L 35       caret::createDataPartition(data$La...
R/XGBoost_Based_ML.R#L 39       caret::trainControl(...
R/XGBoost_Based_ML.R#L 43       )...
R/XGBoost_Based_ML.R#L 45       # MLmethod <- "gbm::gbm" # Add thi...
R/XGBoost_Based_ML.R#L 46       tune_grid <-...
R/XGBoost_Based_ML.R#L 48           n.trees = c(50, 100, 150),...
R/XGBoost_Based_ML.R#L 49           interaction.depth = c(1, 3, 5)...
R/XGBoost_Based_ML.R#L 50           shrinkage = c(0.1, 0.05),...
R/XGBoost_Based_ML.R#L 51           n.minobsinnode = 5...
R/XGBoost_Based_ML.R#L 54       tune_grid <- expand.grid(...
R/XGBoost_Based_ML.R#L 62       )...
R/XGBoost_Based_ML.R#L 63       xgb_1 <- train(...
R/XGBoost_Based_ML.R#L 72       )...
R/XGBoost_Based_ML.R#L 74       tune_grid <- NULL...
R/XGBoost_Based_ML.R#L 79       caret::train(...
R/XGBoost_Based_ML.R#L 86       )...
R/XGBoost_Based_ML.R#L 90       df_imps <-...
R/XGBoost_Based_ML.R#L 92       df_imps1 <- data.frame(Overall = d...
R/XGBoost_Based_ML.R#L 94       df_imps <- caret::varImp(model)...
R/XGBoost_Based_ML.R#L 95       df_imps1 <- df_imps[["importance"]...
R/XGBoost_Based_ML.R#L109       FilteredData = newdata,...
R/XGBoost_Based_ML.R#L110       Important_Features = Genes,...
R/XGBoost_Based_ML.R#L111       ML_Analysis = df_imps1...
R/XGBoost_Based_ML.R#L113   }...
man/filter_genes.Rd#L 39   filter_method = "High_Variable_Genes",...
man/normalize_data.Rd#L 27  head(ExampleDataset, 100),normal_method...
man/Ontology_Analysis.Rd#L  8   Important_Features,...
man/Ontology_Analysis.Rd#L  9   ontology_type = "KEGG",...
man/Ontology_Analysis.Rd#L 10   organism = "human"...
man/Ontology_Analysis.Rd#L 36   Important_Features <- FilterData$Impor...
man/Ontology_Analysis.Rd#L 37   ontology_type <- "MKEGG",...
man/Ontology_Analysis.Rd#L 38   organism <- "mouse"...
man/PvalueCalc.Rd#L  8   data,...
man/PvalueCalc.Rd#L  9   Pvaluemethod,...
man/PvalueCalc.Rd#L 10   Labels,...
man/PvalueCalc.Rd#L 11   Test = "LRT",...
man/PvalueCalc.Rd#L 12   dmethod = "bimod",...
man/PvalueCalc.Rd#L 13   DESeq2.test = "LRT",...
man/PvalueCalc.Rd#L 14   method_MAST = "bayesglm",...
man/PvalueCalc.Rd#L 15   MAST.parallel = TRUE...
man/Tree_Based_ML.Rd#L 45   n_genes_to_keep=8)...
vignettes/GenesRanking_vignette.Rmd#L  4   collapse = TRUE,...
vignettes/GenesRanking_vignette.Rmd#L  5   comment = "#>"...
vignettes/GenesRanking_vignette.Rmd#L 10   - [GenesRanking](#GenesRanking)...
vignettes/GenesRanking_vignette.Rmd#L 11   - [Introduction](#Introduction)...
vignettes/GenesRanking_vignette.Rmd#L 12   - [Installation](#Installation)...
vignettes/GenesRanking_vignette.Rmd#L 13   - [Usage-example](#Usage-example)...
vignettes/GenesRanking_vignette.Rmd#L 68                          normal_method="...
vignettes/GenesRanking_vignette.Rmd#L 73                  filter_method = "High_V...
vignettes/GenesRanking_vignette.Rmd#L 83                      Labels = Labels, n_...
vignettes/GenesRanking_vignette.Rmd#L 87                                         ...
vignettes/GenesRanking_vignette.Rmd#L 95                                      "xg...
vignettes/GenesRanking_vignette.Rmd#L123   Important_Features = result_XGBoost_Ba...
vignettes/GenesRanking_vignette.Rmd#L124                        ontology_type = "...
vignettes/GenesRanking_vignette.Rmd#L125                        organism = "mouse...
* Checking if package already exists in CRAN... OK
* Checking for bioc-devel mailing list subscription...
* NOTE: Cannot determine whether maintainer is subscribed to the Bioc-Devel mailing list (requires admin credentials). Subscribe here: https://stat.ethz.ch/mailman/listinfo/bioc-devel
* Checking for support site registration... OK
